- name: Setup Mater Node
  hosts: control_plane
  become: true
  tasks:
  - name: Check if kubeadm is already initialized
    stat:
      path: /etc/kubernetes/admin.conf
    register: kubeadm_initialized

  - name: Uncomment net.ipv4.ip_forward in sysctl.conf
    ansible.builtin.lineinfile:
      path: /etc/sysctl.conf
      regexp: '^#(net\.ipv4\.ip_forward=1)'
      line: '\1'
      backrefs: yes

  - name: Apply sysctl settings
    ansible.builtin.command: sysctl -p
    register: sysctl_output
    changed_when: "'net.ipv4.ip_forward = 1' in sysctl_output.stdout"

  - name: Kubeadm Init
    command: kubeadm init --pod-network-cidr=192.168.0.0/16
    when: not kubeadm_initialized.stat.exists

  - name: Check admin.conf exist
    stat:
      path: "/home/{{ ansible_user }}/.kube/config"
    register: admin_conf

  - name: Create .kube directory
    file:
      path: "/home/{{ ansible_user }}/.kube"
      state: directory
      mode: '0755'
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
    when: not admin_conf.stat.exists

  - name: Copy admin.conf to user kube config
    copy:
      src: /etc/kubernetes/admin.conf
      dest: "/home/{{ ansible_user }}/.kube/config"
      remote_src: yes
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0644'
    when: not admin_conf.stat.exists

  - name: Wait for Kubernetes API health to be ok
    shell: curl -k https://localhost:6443/healthz
    register: result
    retries: 30
    delay: 10
    until: result.stdout == "ok"

  - name: Install CNI plugin
    command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml

  - name: Generate kubeadm join command
    command: kubeadm token create --print-join-command
    register: join_cmd

  - name: Save join command to file
    copy:
      content: "{{ join_cmd.stdout }}"
      dest: "/tmp/kubeadm-join-command.sh"
      mode: '0755'

  - name: Fetch join command from remote to local
    fetch:
      src: "/tmp/kubeadm-join-command.sh"
      dest: "./join-command.sh"
      flat: yes

  - name: Show join command
    debug:
      msg: "{{ join_cmd.stdout }}"
